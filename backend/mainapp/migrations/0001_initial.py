# Generated by Django 4.2.6 on 2023-12-17 01:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=100, unique=True, verbose_name='email')),
                ('name', models.CharField(max_length=40)),
                ('surname', models.CharField(max_length=40)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='profile_photos/')),
                ('description', models.TextField(blank=True, null=True, verbose_name='information about user')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('used_password_reset_token', models.CharField(blank=True, max_length=300, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntryBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('upload_date', models.DateField(auto_now=True)),
                ('topic', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('upload_date', models.DateField(auto_now=True)),
                ('category', models.CharField(choices=[('secondhand', 'Secondhand'), ('borrow', 'Borrow'), ('donation', 'Donation')], max_length=10)),
                ('return_date', models.DateField(blank=True, null=True)),
                ('product_type', models.CharField(choices=[('electronics', 'Electronics'), ('book', 'Book'), ('household', 'Household'), ('clothing_accessories', 'Clothing & Accessories'), ('toys_games', 'Toys & Games'), ('sports', 'Sports'), ('art', 'Art'), ('other', 'Other')], default='other', max_length=30)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LostAndFoundEntry',
            fields=[
                ('entrybase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainapp.entrybase')),
                ('category', models.CharField(choices=[('lost', 'Lost'), ('found', 'Found')], max_length=10)),
            ],
            bases=('mainapp.entrybase',),
        ),
        migrations.CreateModel(
            name='OnlineUserModel',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('is_online', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='product_photos/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='mainapp.product')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('new_message', 'New Message'), ('upvoted_complaint', 'Upvoted Complaint'), ('downvoted_complaint', 'Downvoted Complaint')], max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('related_item_id', models.IntegerField()),
                ('related_item', models.CharField(choices=[('PRODUCT', 'Product'), ('COMPLAINT', 'ComplaintEntry'), ('LOSTFOUND', 'LostAndFoundEntry'), ('CHAT', 'Chat')], max_length=100)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField(null=True)),
                ('category', models.CharField(choices=[('secondhand', 'Secondhand'), ('borrow', 'Borrow'), ('donation', 'Donation'), ('lost', 'Lost'), ('found', 'Found')], max_length=10, null=True)),
                ('messages', models.ManyToManyField(blank=True, to='mainapp.message')),
                ('participiants', models.ManyToManyField(related_name='chats', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='favorited_products',
            field=models.ManyToManyField(blank=True, related_name='favorited_by', to='mainapp.product'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='ComplaintEntry',
            fields=[
                ('entrybase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainapp.entrybase')),
                ('vote', models.DecimalField(blank=True, decimal_places=0, default=0, max_digits=6, null=True)),
                ('target_mail', models.EmailField(blank=True, max_length=100, null=True, verbose_name='target mail')),
                ('downvoted_by', models.ManyToManyField(blank=True, related_name='downvoted_complaints', to=settings.AUTH_USER_MODEL)),
                ('upvoted_by', models.ManyToManyField(blank=True, related_name='upvoted_complaints', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('mainapp.entrybase',),
        ),
    ]
